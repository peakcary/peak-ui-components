{"version":3,"sources":["components/button/index.js","components/alert/index.js","components/bocProps/index.js","App.js","index.js"],"names":["Button","_ref","text","react_default","a","createElement","className","propTypes","PropTypes","any","Alert","Option","Select","BocProps","props","_this","_Component","call","this","onChange","value","console","log","selectedValue","ptype","setState","url","axios","get","params","headers","token","then","d","data","event","dataC","onChangeC","onConfirm","state","componentDidMount","_this2","render","_this$props","readonly","title","label","labelC","Fragment","card","bordered","extra","href","es_select","disabled","showSearch","style","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","map","item","key","name","cname","es_button","borderColor","onClick","type","backgroundColor","Component","string","initialValue","bool","func","App","handleConfirm","components_bocProps","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0a2df23e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst Button = ({ text }) => <button className=\"btn\">这是一个组件按钮{text}</button>\n\nButton.propTypes = {\n  text: PropTypes.any\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst Alert = ({ text }) => <div className=\"aaa\">这是一个Alert {text}</div>\n\nAlert.propTypes = {\n  text: PropTypes.any\n};\n\nexport default Alert;\n","import React, { Component, } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Button, Select, Card } from 'antd';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nconst { Option } = Select;\n\nclass BocProps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataC: [],\n      selectedValue: \"\"\n    }\n  }\n\n  componentDidMount() {\n    const { ptype } = this.props;\n    let url = '/api/property/user/properties';\n    if (ptype === 'event') {\n      url = `/api/v2/sf/events/all?project=default&cache=false&invisible=false&check_permission=false`;\n    }\n    if (ptype === 'product') {\n      url = `/api/v2/sf/items/type?project=default&cache=false&invisible=false&check_permission=false`;\n    }\n    axios.get(url,\n      {\n        params: {},\n        headers: { token: '$6666ebc5599b852f3a8f81c1fdcd3575' }\n      },\n    ).then((d) => {\n      this.setState({\n        data: d.data\n      })\n    });\n  }\n\n  onChange = (value) => {\n    console.log(value)\n    let selectedValue = \"\";\n    const { ptype } = this.props;\n    if (ptype === 'user') {\n      selectedValue = \"${user.\" + value + \"}\";\n      this.setState({\n        selectedValue\n      })\n    }\n    if (ptype === 'event') {\n      let url = '/api/event/properties?events=' + value;\n      axios.get(url,\n        {\n          params: {},\n          headers: { token: '$6666ebc5599b852f3a8f81c1fdcd3575' }\n        },\n      ).then((d) => {\n        console.log('ddd:', d.data[value].event)\n        this.setState({\n          dataC: d.data[value].event\n        })\n      });\n    }\n    if (ptype === 'product') {\n      let url = '/api/v2/sf/items/properties?project=default&item_type=' + value;\n      axios.get(url,\n        {\n          params: {},\n          headers: { token: '$6666ebc5599b852f3a8f81c1fdcd3575' }\n        },\n      ).then((d) => {\n        console.log(d.data)\n        this.setState({\n          dataC: d.data\n        })\n      });\n    }\n  }\n\n  onChangeC = (value) => {\n    console.log(value)\n    let selectedValue = \"\";\n    const { ptype } = this.props;\n    if (ptype === 'event') {\n      selectedValue = \"${event.\" + value + \"}\";\n      this.setState({\n        selectedValue\n      })\n    }\n    if (ptype === 'product') {\n      selectedValue = \"${item.\" + value + \"}\";\n      this.setState({\n        selectedValue\n      })\n    }\n  }\n\n  onConfirm = () => {\n    this.props.onConfirm(this.state.selectedValue);\n  }\n\n\n  render() {\n    const { ptype, readonly } = this.props;\n    const { dataC } = this.state;\n\n    let title = '';\n    let label = \"\";\n    let labelC = \"\";\n    if (ptype === 'user') {\n      title = '用户属性';\n      label = \"用户属性:\";\n    }\n    if (ptype === 'event') {\n      title = '事件属性';\n      label = \"事件类型\";\n      labelC = \"事件属性\";\n    }\n    if (ptype === 'product') {\n      title = '产品属性';\n      label = \"产品类型\";\n      labelC = \"产品属性\";\n    }\n\n    return (\n      <>\n        <Card bordered={false} extra={<a href=\"#\">Close</a>} title={title} >\n          <div className='select_container'>\n            <div className='select_row'>\n              <div className='select_label'>\n                {label}\n              </div>\n              <div className='select_value'>\n                <Select\n                  disabled={readonly}\n\n                  showSearch\n                  style={{ width: 200 }}\n                  placeholder=\"请选择\"\n                  optionFilterProp=\"children\"\n                  onChange={this.onChange}\n                  filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {this.state.data.map(item => {\n                    return <Option key={item.name}>{item.cname}</Option>\n                  })}\n                </Select>\n              </div>\n            </div>\n            {(ptype === 'event' || ptype === 'product') && <div className='select_row'>\n              <div className='select_label'>\n                {labelC}\n              </div>\n              <div className='select_value'>\n                <Select\n                  disabled={readonly}\n\n                  showSearch\n                  style={{ width: 200 }}\n                  placeholder=\"请选择\"\n                  optionFilterProp=\"children\"\n                  onChange={this.onChangeC}\n                  filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {dataC.map(item => {\n                    return <Option key={item.name}>{item.cname}</Option>\n                  })}\n                </Select>\n              </div>\n            </div>}\n          </div>\n          <div className='select_line'></div>\n          <div className='select_btn'>\n            <Button\n              style={{  borderColor: '#fff' }} onClick={this.onConfirm}>取消</Button>\n            <Button type=\"primary\"\n            className=\"btn\"\n            style={{ backgroundColor: '#00BF8A', borderColor: '#00BF8A' }}\n            onClick={this.onConfirm}>插入</Button>\n          </div>\n        </Card>\n      </>\n    );\n  }\n}\n\n\n\n\n\nBocProps.propTypes = {\n  ptype: PropTypes.string,// 类型 用户属性 user 事件属性event 产品属性product 白名单white\n  initialValue: PropTypes.string,//初始值\n  readonly: PropTypes.bool,// 只读 false\n  onConfirm: PropTypes.func// 插入\n};\n\nexport default BocProps;\n\n\n\n\n\n\n\n\n/*\nconst BocProps = ({ ptype, initialValue, readonly, onConfirm }) => {\n  const [data, setData] = useState({ data: [] });\n  const [dataP, setDataP] = useState({ dataP: [] });\n  let v = '';\n  const childrenP = [];\n  const children = [];\n  let title = \"\";\n  let selectedValue = '';\n  function onChange(value) {\n    // 用户属性：${ user.$mp_nickname }\n    // 事件属性： ${ event.$mp_content } 只能触发型计划插入，只能插入触发选择的事件属性\n    // 白名单属性：${ tag.{ tagcode }.$name } 待确认\n    // 产品属性:${ item.属性名称 }\n\n    let v = \"${user.\" + value + \"}\";\n    selectedValue = v;\n  }\n\n  function onChangeEvent(value) {\n    let url = '/api/event/properties?events=' + value;\n    axios.get(url,\n      {\n        params: {},\n        headers: { token: '$6666ebc5599b852f3a8f81c1fdcd3575' }\n      },\n    ).then((d) => {\n      console.log(d.data[value].event)\n      setData(d.data[value].event);\n    });\n\n    console.log(data, 'data')\n    for (let i = 0, l = data.length; i < l; i++) {\n      children.push(<Option key={data[i].name}>{data[i].cname}</Option>);\n    }\n  }\n\n\n\n  if (ptype === 'user') {\n    title = '用户属性';\n    v = initialValue.split('${user.')[1];\n    v = v.substring(0, v.length - 1)\n    useEffect(async () => {\n      let url = '/api/property/user/properties';\n      const data = await axios.get(url,\n        {\n          params: {},\n          headers: { token: '$6666ebc5599b852f3a8f81c1fdcd3575' }\n        },\n      );\n      setData(data.data);\n    }, []);\n\n    for (let i = 0, l = data.length; i < l; i++) {\n      children.push(<Option key={data[i].name}>{data[i].cname}</Option>);\n    }\n  }\n  if (ptype === 'event') {\n\n    title = '事件属性';\n    // v = initialValue.split('${user.')[1];\n    // v = v.substring(0, v.length - 1)\n    useEffect(async () => {\n      // let url = '/api/events/all?project=default';\n      let url = `/api/v2/sf/events/all?project=default&cache=false&invisible=false&check_permission=false`;\n      const data = await axios.get(url,\n        {\n          params: {},\n          headers: { token: '$6666ebc5599b852f3a8f81c1fdcd3575' }\n        },\n      );\n      setDataP(data.data);\n    }, []);\n\n    for (let i = 0, l = dataP.length; i < l; i++) {\n      childrenP.push(<Option key={dataP[i].name}>{dataP[i].cname}</Option>);\n    }\n  }\n\n\n\n\n  return (\n    <>\n      <Card title={title} >\n        {ptype === 'user' && <div className='select_container'>\n          <div className='select_row'>\n            <div className='select_label'>\n              请选择用户属性:\n            </div>\n            <div className='select_value'>\n              <Select\n                disabled={readonly}\n                defaultValue={v}\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a person\"\n                optionFilterProp=\"children\"\n                onChange={onChange}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {children}\n              </Select>\n            </div>\n          </div>\n\n        </div>\n        }\n        {ptype === 'event' && <div className='select_container'>\n          <div className='select_row'>\n            <div className='select_label'>\n              请选择事件:\n            </div>\n            <div className='select_value'>\n              <Select\n                disabled={readonly}\n                defaultValue={v}\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a person\"\n                optionFilterProp=\"children\"\n                onChange={onChangeEvent}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {childrenP}\n              </Select>\n            </div>\n          </div>\n          <div className='select_row'>\n            <div className='select_label'>\n              请选择事件属性:\n            </div>\n            <div className='select_value'>\n              <Select\n                disabled={readonly}\n                defaultValue={v}\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a person\"\n                optionFilterProp=\"children\"\n                onChange={onChange}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {children}\n              </Select>\n            </div>\n          </div>\n\n        </div>}\n        <div className='select_btn'>\n          <Button onClick={() => { onConfirm(selectedValue) }}>插入</Button>\n        </div>\n      </Card>\n    </>\n  )\n}\n\n*/\n\n\n","import React, { Component } from 'react';\nimport {   BocProps } from './components';\n\nclass App extends Component {\n\n\n  handleConfirm = (data) => {\n    console.log('data', data)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BocProps\n          ptype='user'\n          initialValue='${user.$mp_wx6228eb2adfba3ab4_qr_scene_str}'\n          onConfirm={this.handleConfirm}\n          readonly={false}>\n        </BocProps>\n         <BocProps\n          ptype='event'\n          initialValue='${event.$utm_source}'\n          onConfirm={this.handleConfirm}\n          readonly={false}>\n        </BocProps>\n        <BocProps\n          ptype='product'\n          initialValue='${user.$mp_wx6228eb2adfba3ab4_qr_scene_str}'\n          onConfirm={this.handleConfirm}\n          readonly={false}>\n        </BocProps>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}